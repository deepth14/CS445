{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li960\fi-480\sl313\sa213\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
1)
\f1\fs18\fsmilli9333 \'a0\'a0\'a0\'a0 
\f0\fs29\fsmilli14667 \cb3 function max(a,b)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0if (a>b) return a;\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0return b;\cb1 \uc0\u8232 \cb3 \'a0\'a0\} \cb1 \uc0\u8232 \u8232 \cb3 2. function maxOfThree(a,b,c)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0if (a>b && a>c) return a;\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0else if (b>c && b>a) return b;\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0return c;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 3. function isVowel(x)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0if (x=='a'||x=='i'||x=='o'||x=='u'||x=='e') return true;\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0return false;\cb1 \uc0\u8232 \cb3 \'a0\'a0\} \cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a04. function sum(numbers)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0sum=0;\cb1 \uc0\u8232 \cb3 \'a0\'a0for(let i=0;i<numbers.length;i++)\cb1 \uc0\u8232 \cb3 \'a0\'a0sum+=numbers[i];\cb1 \uc0\u8232 \cb3 \'a0\'a0return sum;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0function multiply(numbers)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0mult=1;\cb1 \uc0\u8232 \cb3 \'a0\'a0for(let i=0;i<numbers.length;i++)\cb1 \uc0\u8232 \cb3 \'a0\'a0mult*=numbers[i];\cb1 \uc0\u8232 \cb3 \'a0\'a0return mult;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a05. function reverse(a)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0result="";\cb1 \uc0\u8232 \cb3 \'a0\'a0for(let i=a.length-1;i>=0;i--)\cb1 \uc0\u8232 \cb3 \'a0\'a0result+=a.charAt(i);\cb1 \uc0\u8232 \cb3 \'a0\'a0return result;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a06. function findLongestWord(a)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0result=0;\cb1 \uc0\u8232 \cb3 \'a0\'a0for(let i=0;i<a.length;i++)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0if(a[i].length>result) \cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0result=a[i].length;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0return result;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a07. function filterLongWords(a,b)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0result=[];\cb1 \uc0\u8232 \cb3 \'a0\'a0for(let i=0;i<a.length;i++)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0if(a[i].length>b) \cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0result.push(a[i]);\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0return result;\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a08. function computeSumOfSquares(a)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0return a.reduce((x,y)=>x+y*y,0);\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \uc0\u8232 \cb3 \'a0\'a0\cb1 \uc0\u8232 \cb3 \'a0\'a09.function printOddNumbersOnly(a)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0for(let i=0;i<a.length;i++)\{\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0if (a[i]%2!=0)\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0console.log(a[i]);\cb1 \uc0\u8232 \cb3 \'a0\'a0\'a0\'a0\} \cb1 \uc0\u8232 \cb3 \'a0\'a0\}\cb1 \
\pard\pardeftab720\sl313\sa213\partightenfactor0
\cf2 10. function computeSumOfSquaresOfEvensOnly(a)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 return a.filter(e=> e%2==0).map(e=>e*e).reduce((x,y)=>x+y,0);\
\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
\'a0\
11.\'a0 function sum(a)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 return a.reduce((x,y)=>x+y,0);\
\'a0\'a0\'a0 \}\
\'a0\'a0\'a0 \
\'a0\'a0 function\'a0 multiply(a)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 return a.reduce((x,y)=>x*y,1);\
\'a0\'a0\'a0 \}\
\'a0\
12. function findSecondBiggest(a)\{\
\'a0\'a0\'a0\'a0\'a0\'a0 maxindex=0;\
\'a0\'a0\'a0\'a0\'a0\'a0 max=0;\
\'a0\'a0\'a0\'a0\'a0\'a0 for(let i=0; i<a.length;i++)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(a[i]>max)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 max=a[i];\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 maxindex=i;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0 secmax=0;\
\'a0\'a0\'a0\'a0\'a0\'a0 for(let j=0;j<a.length;j++)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(a[j]>secmax && j!=maxindex)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 secmax=a[j];\
\'a0\'a0\'a0\'a0\'a0\'a0 \}\
\'a0\'a0\'a0\'a0\'a0\'a0 return secmax;\
\'a0\'a0 \}\
\'a0\'a0 \
\'a0 13.\'a0 function printfibo(a,b,c)\{\
\'a0\'a0\'a0\'a0\'a0\'a0 \
\'a0\'a0\'a0 for(let i =1;i<=a;i++)\{\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 console.log(b + " ");\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 sumOfPrevTwo = b + c;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 b = c;\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 c = sumOfPrevTwo;\
\'a0\'a0\'a0 \}\
\'a0\'a0 \}\
// from Sunday\
function mulCount(a,b)\{\
\'a0\'a0 \
let arr = a.filter(c=>c%b===0)\
return arr.length;\
\}\
console.log(mulCount([1,2,1,2,3,4,3,4],4))\
\'a0\
/**\
\'a0* \
\'a0*/\
function reversedInplace(a)\{\
\'a0\'a0\'a0 let b=a.reverse();\
\'a0\'a0\'a0 return b\
\}\
console.log(reversedInplace([1,2,3,4,5]))\
\'a0\
\pard\pardeftab720\li960\sl313\sa213\partightenfactor0
\cf2 \'a0\
}